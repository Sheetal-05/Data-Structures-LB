class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        //sort form the beginning
        sort(begin(points), end(points));
        vector<int> prev = points[0];
        int arrows = 1; 

        for(int i = 1; i < points.size(); i++){
            
            int currstart = points[i][0];
            int currend = points[i][1];
            int prevstart = prev[0];
            int prevend = prev[1];

            //overlapping check
            if(prevend < currstart){
                //no overlapping
                arrows++;
                prev = points[i];
                
            }
            else{
                //overlapping -> find the overlapped region
                prev[0] = max(prevstart, currstart);
                prev[1] = min(prevend , currend); 

            }

        }
        return arrows;
    }
};

//time complexity = nlogn + n == nlogn
