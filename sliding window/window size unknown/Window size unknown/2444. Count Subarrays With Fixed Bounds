class Solution {
public:
    long long countSubarrays(vector<int>& nums, int minK, int maxK) {
        
        int j = 0; 
        long long ans = 0;
        int maxi = -1;
        int mini = -1;
        int bidx = -1;  //bad index

        while(j < nums.size()){
            //out of bound
            if(nums[j] > maxK || nums[j] < minK){
                bidx = j;
            }
            
            if(nums[j] == minK){
                    mini = j;
                }
            if(nums[j] == maxK){
                    maxi = j;
                }
            
            ans += max(0, min(maxi , mini) - bidx);
            j++;
        }

            return ans;
       
    }
};



class Solution {
public:
    long long countSubarrays(vector<int>& nums, int minK, int maxK) {
        
        int count = 0;

        for(int i = 0; i < nums.size(); i++){
                int maxi = INT_MIN;
                int mini = INT_MAX;
            for(int j = i; j < nums.size(); j++){
                    mini = min(mini , nums[j]);
                    maxi = max(maxi, nums[j]);

                    if(mini == minK && maxi == maxK){
                        count++;
                    }
            }
        }
        return count;
    }
};
